{"_id":"mixable-object","_rev":"8-ab6cb561e56f29798088ed2f8acc8b3b","name":"mixable-object","description":"(Node.js) The way we do code reuse: simply copy things from an object to another.","dist-tags":{"latest":"0.1.1"},"versions":{"0.0.1":{"name":"mixable-object","version":"0.0.1","description":"(Node.js) The way we do code reuse: simply copy things from an object to another.","author":{"name":"Wiredcraft","email":"info@wiredcraft.com","url":"http://wiredcraft.com"},"contributors":[{"name":"Makara Wang"}],"keywords":["mixable","mixin","object","prototype"],"license":"MIT","repository":{"type":"git","url":"https://github.com/Wiredcraft/mixable-object.git"},"bugs":{"url":"https://github.com/Wiredcraft/mixable-object/issues"},"homepage":"https://github.com/Wiredcraft/mixable-object","dependencies":{},"devDependencies":{"benchmark":"latest","debug":"latest","es5-ext":"latest","es6-shim":"latest","gulp":"latest","gulp-coffee":"latest","gulp-coffeelint":"latest","gulp-coverage":"latest","gulp-jshint":"latest","gulp-mocha":"latest","gulp-util":"latest","jshint-stylish":"latest","request":"latest","should":"latest"},"scripts":{},"gitHead":"b934c83a0a24d261d0b6c3dd7c092938a1d76b90","_id":"mixable-object@0.0.1","_shasum":"b77999599a53cc962609f0b505e1206db433c18e","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.35","_npmUser":{"name":"makara","email":"makara@wiredcraft.com"},"maintainers":[{"name":"makara","email":"makara@wiredcraft.com"}],"dist":{"shasum":"b77999599a53cc962609f0b505e1206db433c18e","tarball":"https://registry.npmjs.org/mixable-object/-/mixable-object-0.0.1.tgz"},"directories":{}},"0.0.2":{"name":"mixable-object","version":"0.0.2","description":"(Node.js) The way we do code reuse: simply copy things from an object to another.","author":{"name":"Wiredcraft","email":"info@wiredcraft.com","url":"http://wiredcraft.com"},"contributors":[{"name":"Makara Wang"}],"keywords":["mixable","mixin","object","prototype"],"license":"MIT","repository":{"type":"git","url":"https://github.com/Wiredcraft/mixable-object.git"},"bugs":{"url":"https://github.com/Wiredcraft/mixable-object/issues"},"homepage":"https://github.com/Wiredcraft/mixable-object","dependencies":{},"devDependencies":{"benchmark":"latest","debug":"latest","es5-ext":"latest","es6-shim":"latest","gulp":"latest","gulp-coffee":"latest","gulp-coffeelint":"latest","gulp-coverage":"latest","gulp-jshint":"latest","gulp-mocha":"latest","gulp-util":"latest","jshint-stylish":"latest","request":"latest","should":"latest"},"scripts":{},"gitHead":"0878629107982c44ca21ea40daead10aaa50f8b3","_id":"mixable-object@0.0.2","_shasum":"7d1502ac83c39b663b4164856628269e4f0e71ae","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.35","_npmUser":{"name":"makara","email":"makara@wiredcraft.com"},"maintainers":[{"name":"makara","email":"makara@wiredcraft.com"}],"dist":{"shasum":"7d1502ac83c39b663b4164856628269e4f0e71ae","tarball":"https://registry.npmjs.org/mixable-object/-/mixable-object-0.0.2.tgz"},"directories":{}},"0.0.3":{"name":"mixable-object","version":"0.0.3","description":"(Node.js) The way we do code reuse: simply copy things from an object to another.","author":{"name":"Wiredcraft","email":"info@wiredcraft.com","url":"http://wiredcraft.com"},"contributors":[{"name":"Makara Wang"}],"keywords":["mixable","mixin","object","prototype"],"license":"MIT","repository":{"type":"git","url":"https://github.com/Wiredcraft/mixable-object.git"},"bugs":{"url":"https://github.com/Wiredcraft/mixable-object/issues"},"homepage":"https://github.com/Wiredcraft/mixable-object","dependencies":{},"devDependencies":{"benchmark":"latest","debug":"latest","es5-ext":"latest","es6-shim":"latest","gulp":"latest","gulp-coffee":"latest","gulp-coffeelint":"latest","gulp-coverage":"latest","gulp-jshint":"latest","gulp-mocha":"latest","gulp-util":"latest","jshint-stylish":"latest","request":"latest","should":"latest"},"scripts":{},"gitHead":"99e062ab8d9421c059e7e7e79abd753a34732acc","_id":"mixable-object@0.0.3","_shasum":"e69761a27bff6aed7353697e4176bbc01290a8d8","_from":".","_npmVersion":"2.1.16","_nodeVersion":"0.10.35","_npmUser":{"name":"makara","email":"makara@wiredcraft.com"},"maintainers":[{"name":"makara","email":"makara@wiredcraft.com"}],"dist":{"shasum":"e69761a27bff6aed7353697e4176bbc01290a8d8","tarball":"https://registry.npmjs.org/mixable-object/-/mixable-object-0.0.3.tgz"},"directories":{}},"0.1.0":{"name":"mixable-object","version":"0.1.0","description":"(Node.js) The way we do code reuse: simply copy things from an object to another.","author":{"name":"Wiredcraft","email":"info@wiredcraft.com","url":"http://wiredcraft.com"},"contributors":[{"name":"Makara Wang"}],"keywords":["mixable","mixin","object","prototype"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/Wiredcraft/mixable-object.git"},"bugs":{"url":"https://github.com/Wiredcraft/mixable-object/issues"},"homepage":"https://github.com/Wiredcraft/mixable-object","dependencies":{"sliced":"^1.0.1"},"devDependencies":{"benchmark":"^2.0.0","coveralls":"^2.11.0","debug":"^2.2.0","es5-ext":"^0.10.0","es6-shim":"^0.34.0","istanbul":"^0.4.0","jscs":"^2.9.0","mocha":"^2.3.0","should":"^8.2.0"},"scripts":{},"gitHead":"99349b74218e124818dcbad17fc50c446922b56b","_id":"mixable-object@0.1.0","_shasum":"73f2b0debd007deabeaf22d6da40954eb364c780","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.6","_npmUser":{"name":"makara","email":"makara@wiredcraft.com"},"dist":{"shasum":"73f2b0debd007deabeaf22d6da40954eb364c780","tarball":"https://registry.npmjs.org/mixable-object/-/mixable-object-0.1.0.tgz"},"maintainers":[{"name":"makara","email":"makara@wiredcraft.com"}],"directories":{}},"0.1.1":{"name":"mixable-object","version":"0.1.1","description":"(Node.js) The way we do code reuse: simply copy things from an object to another.","author":{"name":"Wiredcraft","email":"info@wiredcraft.com","url":"http://wiredcraft.com"},"contributors":[{"name":"Makara Wang"}],"keywords":["mixable","mixin","object","prototype"],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/Wiredcraft/mixable-object.git"},"bugs":{"url":"https://github.com/Wiredcraft/mixable-object/issues"},"homepage":"https://github.com/Wiredcraft/mixable-object","dependencies":{},"devDependencies":{"benchmark":"^2.0.0","coveralls":"^2.11.0","debug":"^2.2.0","es5-ext":"^0.10.0","es6-shim":"^0.34.0","istanbul":"^0.4.0","jscs":"^2.9.0","mocha":"^2.3.0","should":"^8.2.0"},"scripts":{},"gitHead":"1ddb656ab11399b8cffbbf300b51bd334a1a77e1","_id":"mixable-object@0.1.1","_shasum":"a574b954da180ee829ae23d79a7cc7f6b5526089","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.2.6","_npmUser":{"name":"makara","email":"makara@wiredcraft.com"},"dist":{"shasum":"a574b954da180ee829ae23d79a7cc7f6b5526089","tarball":"https://registry.npmjs.org/mixable-object/-/mixable-object-0.1.1.tgz"},"maintainers":[{"name":"makara","email":"makara@wiredcraft.com"}],"directories":{}}},"readme":"# Mixable Object\n\n[![Build Status](https://travis-ci.org/Wiredcraft/mixable-object.svg?branch=master)](https://travis-ci.org/Wiredcraft/mixable-object) [![Coverage Status](https://coveralls.io/repos/github/Wiredcraft/mixable-object/badge.svg?branch=master)](https://coveralls.io/github/Wiredcraft/mixable-object?branch=master)\n\n(Node.js) The way we do code reuse: simply copy things from an object to another.\n\nOriginally part of [Carcass](https://github.com/Wiredcraft/carcass).\n\n> JavaScript is classified as a prototype-based scripting language...\n\nIt just works, without the magical inheritance blah blah.\n\n## How to use\n\nWe usually prepare the code to be reused into \"proto\"s.\n\n```js\nvar proto = {\n    doSomething: function() {\n        return 'done something';\n    }\n};\n```\n\n__A typical gotcha__: `proto.something = 'something';` - it usually doesn't make sense to share a simple value (as opposed to a function).\n\nThen there are many ways to reuse it. One of them is simply copy it to an object.\n\n```js\nvar mixable = require('mixable-object');\n// A random object.\nvar obj = {};\n// Make it mixable.\nmixable(obj);\n// Mixin.\nobj.mixin(proto);\n// Now it can be used.\n// obj.doSomething().should.equal('done something');\n```\n\nHowever most of the time we want to reuse it with another prototype.\n\n```js\nvar mixable = require('mixable-object');\n// A random class.\nfunction Klass() {}\n// It also makes the prototype mixable.\nmixable(Klass);\n// Mixin.\nKlass.prototype.mixin(proto);\n// Now it can be used.\n// var ins = new Klass();\n// ins.doSomething().should.equal('done something');\n```\n\n## How it works\n\nThe code base is very simple, with just a few lines.\n\nThe `mixable()` function simply attaches a `mixin()` function to a given object (or if nothing was given, it builds a new object).\n\nThe `mixin()` function simply copies attributes from a source object to `this`.\n\n__Selective mixin__: a 2nd or more arguments can be used, i.e. `mixin(source, 'keyOne', 'keyTwo', ...)` and if so, only the attributes with the keys are copied.\n\nWe've seen many similar implementations like `Object.assign()` from ES6 or another `mixin()` from [es5-ext](https://github.com/medikoo/es5-ext), while our `mixin()` has some notable features / differences:\n\n1. Only enumerable attributes are copied by default unless you do selective mixin (see above).\n2. Things are copied with `Object.defineProperty()`, so for example we will not copy the value that a getter returns but the getter itself.\n3. The argument of `mixin()` is the source and the target is `this`. This is different with many other libraries where they usually have 2 arguments - the target and the source. This allows it to be chained like `obj.mixin(lorem).mixin(ipsum)`. However you can still do `mixin.call(target, source)` if you want to.\n\n## Merge\n\n`merge()` is a variant of `mixin()`, can be used like:\n\n```js\nvar mixable = require('mixable-object');\nvar obj = {\n    merge: mixable.merge\n};\nobj.merge(something);\n```\n\nOr:\n\n```js\nmixable.merge.call(obj, something);\n```\n\n`merge()` does the same thing with `mixin()` except that if:\n\n1. both the source and the target has an attribute with the same name,\n2. and the descriptors of both the attributes are values (not getters),\n3. and both values are objects,\n\nthe `merge()` will copy the child attributes from the source, recursively, results in a deep merge.\n\n## Git summary\n\n```\n project  : mixable-object\n repo age : 1 year, 1 month\n active   : 6 days\n commits  : 20\n files    : 21\n authors  :\n    20  Makara Wang  100.0%\n```\n","maintainers":[{"name":"makara","email":"makara@wiredcraft.com"}],"time":{"modified":"2016-01-27T05:03:15.530Z","created":"2014-12-29T07:41:42.466Z","0.0.1":"2014-12-29T07:41:42.466Z","0.0.2":"2014-12-29T07:46:55.935Z","0.0.3":"2015-01-03T11:16:24.768Z","0.1.0":"2016-01-26T07:02:34.365Z","0.1.1":"2016-01-27T05:03:15.530Z"},"homepage":"https://github.com/Wiredcraft/mixable-object","keywords":["mixable","mixin","object","prototype"],"repository":{"type":"git","url":"git+https://github.com/Wiredcraft/mixable-object.git"},"contributors":[{"name":"Makara Wang"}],"author":{"name":"Wiredcraft","email":"info@wiredcraft.com","url":"http://wiredcraft.com"},"bugs":{"url":"https://github.com/Wiredcraft/mixable-object/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"56a84f93-2c83\"","_lastModified":"Wed, 27 Jan 2016 5:03:15 GMT"}